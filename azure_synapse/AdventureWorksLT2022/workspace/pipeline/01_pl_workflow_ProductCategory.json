{
	"name": "01_pl_workflow_ProductCategory",
	"properties": {
		"activities": [
			{
				"name": "Create raw file",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "00:05:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ProductCategoryID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ProductCategoryID",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "ParentProductCategoryID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ParentProductCategoryID",
									"type": "Int32",
									"physicalType": "INT_32"
								}
							},
							{
								"source": {
									"name": "Name",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Name",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "rowguid",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								},
								"sink": {
									"name": "rowguid",
									"type": "Guid",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "INT_96"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ProductCategory_Table",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet_File",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.Container",
								"type": "Expression"
							},
							"Layer": "bronze",
							"File": {
								"value": "@concat('ProductCategory/', 'raw_', formatDateTime(utcNow(), 'yyyyMMdd_HHmmss'), '.parquet')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Create bronze table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Create raw file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServer_Serverless_Pool",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": {
							"value": "@pipeline().parameters.BD",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "IF (SELECT OBJECT_ID('bronze.ProductCategory', 'U')) IS NOT NULL\r\n    DROP EXTERNAL TABLE bronze.ProductCategory;\r\n\r\nCREATE EXTERNAL TABLE bronze.ProductCategory\r\n(\r\n    ProductCategoryID INT NULL,\r\n    ParentProductCategoryID INT NULL,\r\n    Name NVARCHAR(50) NULL,\r\n    rowguid UNIQUEIDENTIFIER NULL,\r\n    ModifiedDate DATETIME NULL\r\n)\r\nWITH\r\n(\r\n    DATA_SOURCE = bronze_data,\r\n    LOCATION = 'ProductCategory/*.parquet',\r\n    FILE_FORMAT = ParquetFormat\r\n);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Drop silver view cleaning",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Create bronze table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServer_Serverless_Pool",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": {
							"value": "@pipeline().parameters.BD",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "DROP VIEW IF EXISTS silver.vw_ProductCategory_Clean;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Create silver view cleaning",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Drop silver view cleaning",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServer_Serverless_Pool",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": {
							"value": "@pipeline().parameters.BD",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "CREATE VIEW silver.vw_ProductCategory_Clean\r\nAS\r\nSELECT\r\n\tProductCategoryID,\r\n\tUPPER(TRIM(Name)) AS Name\r\nFROM bronze.ProductCategory;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Materialize clean data",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Create silver view cleaning",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServer_Serverless_Pool",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": {
							"value": "@pipeline().parameters.BD",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "IF (SELECT OBJECT_ID('silver.ProductCategory', 'U')) IS NOT NULL\r\n    DROP EXTERNAL TABLE silver.ProductCategory;\r\n\r\nCREATE EXTERNAL TABLE silver.ProductCategory\r\n    WITH (\r\n        LOCATION = 'ProductCategory/',\r\n        DATA_SOURCE = silver_data,\r\n        FILE_FORMAT = ParquetFormat\r\n    )\r\nAS\r\nSELECT\r\n\tProductCategoryID,\r\n\tName\r\nFROM silver.vw_ProductCategory_Clean;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"Container": {
				"type": "string"
			},
			"BD": {
				"type": "string"
			}
		},
		"folder": {
			"name": "AdventureWorksLT2022/workflows"
		},
		"annotations": [],
		"lastPublishTime": "2025-10-24T02:17:40Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}